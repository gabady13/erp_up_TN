
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыСозданияСтруктура = Новый Структура();
	ПараметрыСозданияСтруктура.Вставить("Наименование", "");
	ПараметрыСозданияСтруктура.Вставить("НаименованиеПолное", "");
	Параметры.Свойство("ЭтоЗагрузкаМатериалов", ЭтоЗагрузкаМатериалов);
	Элементы.СтатьяКалькуляции.Видимость = ЭтоЗагрузкаМатериалов;
	
	ПараметрыСоздания = Новый ФиксированнаяСтруктура(ПараметрыСозданияСтруктура);
	
	Для Каждого Элемент Из СтруктураКолонок(ЭтоЗагрузкаМатериалов) Цикл
		Область = ТабДокумент.Область(ИмяОбласти(1, Элемент.Значение));
		Область.Шрифт = ШрифтыСтиля.ЖирныйШрифтEDI;
		Область.Текст = Элемент.Ключ;
	КонецЦикла;
	
	ОбновитьКешРеквизитовВидаНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Элементы.СтатьяКалькуляции.Видимость Тогда
		Если Не ЗначениеЗаполнено(Объект.СтатьяКалькуляции) Тогда
			текстСообщения = НСтр("ru = 'Не заполнена Статья калькуляции'");
			//@skip-warning
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(текстСообщения,,,"Объект.СтатьяКалькуляции", Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ОбновитьКешРеквизитовВидаНоменклатуры();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьНаСервере();
	
	Если ЭтоЗагрузкаМатериалов Тогда
		Закрыть(ИдентификаторРезультата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ЗагрузитьНаСервере()
	
	ТаблицаКЗагрузке = ПрочитатьТабличныйДокумент(ТабДокумент, СтруктураКолонок(ЭтоЗагрузкаМатериалов));
	ТаблицаРезультата = ПустаяТаблицаРезультат();

	Отказ = Ложь;
	НачатьТранзакцию();	
	
	Наименования = СоответствиеНаименований();
	
	Для Каждого СтрокаНоменклатуры Из ТаблицаКЗагрузке Цикл
		
		//@skip-warning
		СтрукутураЗаполнения = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаНоменклатуры);
		НоменклатураОбъект = ПолучитьНоменклатуру(СтрукутураЗаполнения, Объект.ИскатьПоНаименованиюЕслиНетКода);
		
		Если НоменклатураОбъект = Неопределено Тогда
			НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
		ИначеЕсли Не Объект.ОбновлятьДанные Тогда
			НоваяСтрока = ТаблицаРезультата.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураОбъект.Ссылка;
			НоваяСтрока.СтатьяКалькуляции = Объект.СтатьяКалькуляции;
			Если ЭтоЗагрузкаМатериалов
				И ЗначениеЗаполнено(СтрукутураЗаполнения.Количество) Тогда
				НоваяСтрока.КоличествоУпаковок = Число(СтрЗаменить(СокрЛП(СтрукутураЗаполнения.Количество), ",", "."));
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		НоменклатураОбъект.Родитель = Объект.Группа;
		НоменклатураОбъект.СтавкаНДС = Объект.СтавкаНДС;
		НоменклатураОбъект.ВидНоменклатуры = Объект.ВидНоменклатуры;
		НоменклатураОбъект.Производитель = НайтиСоздатьПроизводителя(СтрукутураЗаполнения._Производитель);
		НоменклатураОбъект.ЕдиницаИзмерения = НайтиЕдиницуИзменения(СтрукутураЗаполнения.ЕдиницаИзмерения);
		Если Не ЗначениеЗаполнено(НоменклатураОбъект.ЕдиницаИзмерения) Тогда
			текстСообщения = стрШаблон(НСтр("ru = 'Не удалось найти единицу измерения %1'"), СтрукутураЗаполнения.ЕдиницаИзмерения);
			//@skip-warning
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(текстСообщения,,,, Отказ);
			Прервать;
		КонецЕсли;
		ВидНоменклатурыПриИзмененииНаСервере(НоменклатураОбъект);
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, СтрукутураЗаполнения,, "ЕдиницаИзмерения");
		НаименованиеНовое = ИмяНоменклатурыНовое(СтрукутураЗаполнения);
		Если Наименования.Получить(НоменклатураОбъект.Наименование) <> Неопределено
			Или Наименования.Получить(НаименованиеНовое) <> Неопределено Тогда
			НоменклатураОбъект.Наименование = НаименованиеНовое;
		КонецЕсли;  
		
		Попытка
			НоменклатураОбъект.Записать();
			Наименования.Вставить(НоменклатураОбъект.Наименование, Истина);
			
			НоваяСтрока = ТаблицаРезультата.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураОбъект.Ссылка;
			НоваяСтрока.СтатьяКалькуляции = Объект.СтатьяКалькуляции;
			Если ЭтоЗагрузкаМатериалов
				И ЗначениеЗаполнено(СтрокаНоменклатуры.Количество) Тогда
				НоваяСтрока.КоличествоУпаковок = Число(СтрЗаменить(СокрЛП(СтрокаНоменклатуры.Количество), ",", "."));
			КонецЕсли;

		Исключение
			текстСообщения = НСтр("ru = '%1 (Код АСУ: %2 Артикул: %3).  %4'");
			текстСообщения = стрШаблон(текстСообщения, СтрокаНоменклатуры.Наименование, СтрокаНоменклатуры._КодАСУНСИ, СтрокаНоменклатуры.Артикул, ОписаниеОшибки());
			//@skip-warning
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(текстСообщения,,,, Отказ);
		КонецПопытки;
		
	КонецЦикла;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	ИдентификаторРезультата = ПоместитьВоВременноеХранилище(ТаблицаРезультата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураКолонок(ЭтоЗагрузкаМатериалов = Ложь)
	
	Структура = Новый Структура;
	Структура.Вставить("Наименование", 1);
	Структура.Вставить("Артикул", 2);
	Структура.Вставить("ЕдиницаИзмерения", 3);
	Структура.Вставить("_КодАСУНСИ", 4);
	Структура.Вставить("_КодГалактика", 5);
	Структура.Вставить("_Производитель", 6);
	Если ЭтоЗагрузкаМатериалов Тогда
		Структура.Вставить("Количество", 7); 
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПрочитатьТабличныйДокумент(ТабДокумент, СтруктураКолонок)
	
	Таблица = Новый ТаблицаЗначений;
	Для Каждого Элемент Из СтруктураКолонок Цикл
		Таблица.Колонки.Добавить(Элемент.Ключ, Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(200)));	
	КонецЦикла;
	
	НомерСтроки = 2;
	ПрерватьЧтение = Ложь;
	Пока Истина Цикл
		
		НоваяСтрока = Таблица.Добавить();
		Для Каждого Элемент Из СтруктураКолонок Цикл
			ЗначениеКолонки = СокрЛП(ТабДокумент.Область(ИмяОбласти(НомерСтроки, Элемент.Значение)).Текст);
			Если Элемент.Значение = 1
				И Не ЗначениеЗаполнено(ЗначениеКолонки) Тогда
				ПрерватьЧтение = Истина;
				Прервать;
			Иначе
				НоваяСтрока[Элемент.Ключ] = ЗначениеКолонки;
			КонецЕсли;
		КонецЦикла;
		
		Если ПрерватьЧтение Тогда
			 Таблица.Удалить(НоваяСтрока);
			Прервать;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяОбласти(Стр, Кол)
	
	Возврат СтрШаблон(НСтр("ru='R%1C%2'"), Стр, Кол);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуру(СтруктураЗаполнения, ИскатьПоНаименованию = Ложь)
	
	КодАСУНСИ = СтрЗаменить(СокрЛП(СтруктураЗаполнения._КодАСУНСИ), "-", "");
	НоменклатураОбъект = Неопределено;
	
	Если ИскатьПоНаименованию 
		И Не ЗначениеЗаполнено(КодАСУНСИ) Тогда
		
		НоменклатураПоИмени = Справочники.Номенклатура.НайтиПоНаименованию(СтруктураЗаполнения.Наименование);
		НоменклатураПоИмениНовому = Справочники.Номенклатура.НайтиПоНаименованию(СтруктураЗаполнения.Наименование);
		
		Если ЗначениеЗаполнено(НоменклатураПоИмени) Тогда
			НоменклатураОбъект = НоменклатураПоИмени.ПолучитьОбъект();	
		ИначеЕсли ЗначениеЗаполнено(НоменклатураПоИмениНовому) Тогда
			НоменклатураОбъект = НоменклатураПоИмени.ПолучитьОбъект();	
		КонецЕсли;
		
		Возврат НоменклатураОбъект; 
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура._КодАСУНСИ = &КодДляПоиска";
	
	Запрос.УстановитьПараметр("КодДляПоиска", КодАСУНСИ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		НоменклатураОбъект = Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Возврат НоменклатураОбъект;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяНоменклатурыНовое(СтруктураЗаполнения) 
	
	Возврат	СтрШаблон("%1 (%2)", СтруктураЗаполнения.Наименование, СтруктураЗаполнения._КодАСУНСИ)
	
КонецФункции

&НаСервере
Процедура ОбновитьКешРеквизитовВидаНоменклатуры()
	
	ИменаРеквизитов =
	"ШаблонРабочегоНаименованияНоменклатуры,
	|ЗапретРедактированияРабочегоНаименованияНоменклатуры,
	|ШаблонНаименованияДляПечатиНоменклатуры,
	|ЗапретРедактированияНаименованияДляПечатиНоменклатуры,
	|НастройкаИспользованияСерий,
	|СодержитДрагоценныеМатериалы,
	|ИспользованиеХарактеристик,
	|ИспользоватьСерии,
	|ИспользоватьСрокГодностиСерии,
	|НаборУпаковок,
	|ГруппаДоступа,
	|НаборСвойств,
	|ТипНоменклатуры,
	|ШаблонЦенника,
	|ШаблонЭтикетки";
	
	//@skip-warning
	РеквизитыВидаНоменклатуры = Новый ФиксированнаяСтруктура(
		ОбщегоНазначенияУТ.ЗначенияРеквизитовОбъектаПоУмолчанию(Объект.ВидНоменклатуры, ИменаРеквизитов));
	
КонецПроцедуры

&НаСервере
Процедура ВидНоменклатурыПриИзмененииНаСервере(ОбъектНоменклатуры)
	
	//@skip-warning
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ОбъектНоменклатуры,
																	Ложь,
																	Ложь,
																	Справочники.ВидыНоменклатуры.ПустаяСсылка(),
																	Ложь);
	
	Если ЗначениеЗаполнено(ОбъектНоменклатуры.ВидНоменклатуры) Тогда
		
		Если ЗначениеЗаполнено(РеквизитыВидаНоменклатуры.ШаблонРабочегоНаименованияНоменклатуры) Тогда
			ОбъектНоменклатуры.Наименование = "";
		ИначеЕсли ЗначениеЗаполнено(ПараметрыСоздания().Наименование) Тогда
			// После обратного переключения на вид номенклатуры без шаблона возвращаем исходное наименование.
			ОбъектНоменклатуры.Наименование = ПараметрыСоздания().Наименование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыВидаНоменклатуры.ШаблонНаименованияДляПечатиНоменклатуры) Тогда
			ОбъектНоменклатуры.НаименованиеПолное = "";
		ИначеЕсли ЗначениеЗаполнено(ПараметрыСоздания().НаименованиеПолное) Тогда
			// После обратного переключения на вид номенклатуры без шаблона возвращаем исходное наименование.
			ОбъектНоменклатуры.НаименованиеПолное = ПараметрыСоздания().НаименованиеПолное;
		КонецЕсли;

	КонецЕсли;
	
	ИспользуетсяИндивидуальныйШаблонЦенника  = ЗначениеЗаполнено(ОбъектНоменклатуры.ШаблонЦенника)
												И (ОбъектНоменклатуры.ШаблонЦенника <> РеквизитыВидаНоменклатуры.ШаблонЦенника);
	ИспользуетсяИндивидуальныйШаблонЭтикетки = ЗначениеЗаполнено(ОбъектНоменклатуры.ШаблонЭтикетки)
												И (ОбъектНоменклатуры.ШаблонЭтикетки <> РеквизитыВидаНоменклатуры.ШаблонЭтикетки);
	
	ОбъектНоменклатуры.ИспользоватьИндивидуальныйШаблонЦенника  = ИспользуетсяИндивидуальныйШаблонЦенника;
	ОбъектНоменклатуры.ИспользоватьИндивидуальныйШаблонЭтикетки = ИспользуетсяИндивидуальныйШаблонЭтикетки;
	
	ОбъектНоменклатуры.ШаблонЦенника  = ?(ИспользуетсяИндивидуальныйШаблонЦенника, ОбъектНоменклатуры.ШаблонЦенника,
		Справочники.ШаблоныЭтикетокИЦенников.ПустаяСсылка());
	ОбъектНоменклатуры.ШаблонЭтикетки = ?(ИспользуетсяИндивидуальныйШаблонЭтикетки, ОбъектНоменклатуры.ШаблонЭтикетки,
		Справочники.ШаблоныЭтикетокИЦенников.ПустаяСсылка());
		
	Элементы.ВидНоменклатуры.АвтоОтметкаНезаполненного = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыСоздания()
	
	Возврат ПараметрыСоздания;
	
КонецФункции

&НаСервере
Функция НайтиЕдиницуИзменения(ЕдиницаИзмерения)
	
	Наименование =  СтрЗаменить(СтрЗаменить(СокрЛП(ЕдиницаИзмерения), ".", ""), ",", "");
	
	Возврат Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(Наименование);
	
КонецФункции

&НаСервере
Функция НайтиСоздатьПроизводителя(Наименование)
	
	Наименование = СокрЛП(Наименование);
	
	Производитель = Справочники.Производители.НайтиПоНаименованию(Наименование);
	
	Если Не ЗначениеЗаполнено(Производитель) Тогда
		ПроизводительНовый = Справочники.Производители.СоздатьЭлемент();
		ПроизводительНовый.Наименование = Наименование;
		ПроизводительНовый.Записать();
		Производитель = ПроизводительНовый.Ссылка; 
	КонецЕсли;
	
	Возврат Производитель;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПустаяТаблицаРезультат()  
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаРезультат.Колонки.Добавить("КоличествоУпаковок", Новый ОписаниеТипов("Число")); 
	ТаблицаРезультат.Колонки.Добавить("СтатьяКалькуляции", Новый ОписаниеТипов("СправочникСсылка.СтатьиКалькуляции"));
	
	Возврат ТаблицаРезультат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоответствиеНаименований()
	
	Соответствие = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Соответствие.Вставить(Выборка.Наименование, Истина);	
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти

#КонецОбласти
